.input {
	$this: &;
	--height: #{rem(50)};
	--padding: #{rem(7) rem(10)};

	position: relative;
	&._filled:not(._file, ._textarea) {
		#{$this}__input {
			padding-top: rem(22);
		}
		#{$this}__label {
			@include text-sm-input-universal;

			top: 0;
			transform: none;
		}
	}
	&._filled._file {
		#{$this}__label {
			opacity: 0;
		}
		#{$this}__file-name,
		#{$this}__reset-btn {
			display: flex;
		}

		@media (max-width: $mobile-lg) {
			#{$this}__file-name {
				flex-direction: row;
				justify-content: space-between;
				padding-inline: rem(20);
				&::before {
					display: none;
				}
			}
			#{$this}__reset-btn {
				margin-top: 0;
			}
		}
	}
	&._error {
		#{$this}__input {
			border-color: var(--red);
		}
		#{$this}__desc {
			color: var(--red);
		}
		#{$this}__file-desc {
			display: none;
			color: var(--orange);
			&._error {
				display: block;
			}
		}
		&._file {
			#{$this}__input-wrapper {
				border-color: var(--orange);
			}
		}
	}
	&._file {
		--height: #{rem(210)};
		--padding: #{rem(40) rem(10) rem(10) rem(10)};
	}
	&._textarea {
		--height: #{rem(210)};
		--padding: #{rem(15) rem(10)};
	}

	@media (max-width: $mobile-lg) {
		&._file {
			--height: #{rem(60)};
			--padding: #{rem(10) rem(15) rem(10) rem(20)};
		}
	}
	&__input {
		@include text-input-universal;

		display: block;
		padding: var(--padding);
		box-sizing: border-box;
		width: 100%;
		height: var(--height);
		border: 1px solid transparent;
		border-radius: 0;
		background-color: var(--grey);
		color: var(--black);
		resize: none;
		transition: border-color $fast-transition-duration $default-transition-function;
		#{$this}._file & {
			opacity: 0;
			cursor: pointer;
		}
		#{$this}._textarea & {
			border: 1px solid rgba($black, 0.2);
			background-color: var(--white);
		}

		@include placeholder {
			color: inherit;
			font: inherit;
			opacity: 0.4;
		}
		&:hover,
		&:focus-visible,
		#{$this}._textarea &:hover,
		#{$this}._textarea &:focus-visible {
			outline: 0;
			border-color: rgba($black, 0.3);
		}
	}
	&__input-wrapper {
		position: relative;
		#{$this}._file & {
			display: grid;
			align-items: center;
			box-sizing: border-box;
			height: var(--height);
			border: 1px dashed rgba($black, 0.1);
			transition: border-color $fast-transition-duration $default-transition-function,
				background-color $fast-transition-duration $default-transition-function;
			&:hover,
			&:focus-within {
				border-color: rgba($black, 0.3);
			}
			& > * {
				grid-area: 1/1/-1/-1;
			}
		}
		#{$this}._file._dragenter & {
			background-color: rgba($orange, 0.1);
		}

		@media (max-width: $mobile-lg) {
			#{$this}._file & {
				border: 1px solid var(--black);
				&:hover,
				&:focus-within {
					border-color: var(--black);
				}
			}
		}
	}
	&__label {
		@include text-input-universal;

		position: absolute;
		top: 50%;
		left: 0;
		display: flex;
		flex-direction: column;
		padding: var(--padding);
		box-sizing: border-box;
		color: rgba($black, 0.6);
		transform: translateY(-50%);
		pointer-events: none;
		transition: top $fast-transition-duration $default-transition-function,
			padding $fast-transition-duration $default-transition-function,
			transform $fast-transition-duration $default-transition-function,
			font-size $fast-transition-duration $default-transition-function;
		#{$this}._file & {
			top: 0;
			width: 100%;
			height: 100%;
			text-align: center;
			line-height: rem(20);
			transform: none;
			&._mobile {
				display: none;
			}
			&::before {
				flex-shrink: 0;
				align-self: center;
				margin-bottom: rem(15);
				width: rem(45);
				height: rem(45);
				background: inline('plus-orange.svg') center no-repeat;
				background-size: contain;
				content: '';
			}
		}
		#{$this}._textarea & {
			top: 0;
			transform: none;
		}
		#{$this}._placeholder & {
			visibility: hidden;
		}

		@media (max-width: $mobile-lg) {
			#{$this}._file & {
				display: none;
				&._mobile {
					@include text-m-universal-medium;

					display: flex;
					flex-direction: row-reverse;
					justify-content: space-between;
					align-items: center;
					gap: rem(10);
					color: var(--black);
					text-transform: uppercase;
					&::before {
						margin-bottom: 0;
						width: rem(25);
						height: rem(25);
						background-image: inline('file.svg');
					}
				}
			}
		}
	}
	&__asterisk {
		color: var(--red);
	}
	&__desc {
		@include text-sm-input-universal;

		margin-top: rem(6);
		color: rgba($black, 0.6);
	}
	&__file-desc {
		margin-top: auto;
		width: fit-content;
		&._error {
			display: none;
		}
	}
	&__file-name {
		display: none;
		flex-direction: column;
		align-items: center;
		text-align: center;
		font-weight: 500;
		&::before {
			margin-bottom: rem(10);
			width: rem(25);
			height: rem(25);
			background-image: inline('file.svg');
			content: '';
		}
	}
	&__file-name-text {
		width: rem(120);
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;

		@media (max-width: $mobile-lg) {
			text-align: left;
		}
	}
	&__reset-btn {
		position: relative;
		z-index: 2;
		display: none;
		margin-top: rem(20);
		line-height: rem(20);
		opacity: 0.4;
		font-weight: 400;
		cursor: pointer;
		transition: opacity $fast-transition-duration $default-transition-function;
		&::after {
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			height: 1px;
			background-color: var(--black);
			content: '';
		}
		&:hover {
			opacity: 1;
		}
	}
	input:-webkit-autofill,
	input:-webkit-autofill:hover,
	input:-webkit-autofill:focus,
	textarea:-webkit-autofill,
	textarea:-webkit-autofill:hover,
	textarea:-webkit-autofill:focus,
	select:-webkit-autofill,
	select:-webkit-autofill:hover,
	select:-webkit-autofill:focus {
		box-shadow: 0 0 0 1000px var(--grey) inset;
		border-color: transparent;
	}
}
